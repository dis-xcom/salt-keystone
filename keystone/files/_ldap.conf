
[ldap]
url = {{ ldap.url }}
user = uid={{ ldap.get("uid", "keystone") }},cn=users,cn=accounts,{{ ldap.suffix }}
password = {{ ldap.password }}
suffix = {{ ldap.suffix }}

# User mapping
user_tree_dn = cn=users,cn=accounts,{{ ldap.suffix }}
user_objectclass = person
user_id_attribute = uid
user_name_attribute = uid
user_mail_attribute = mail
{%- if ldap.get('read_only', True) %}
user_allow_create = false
user_allow_update = false
user_allow_delete = false
{%- endif %}
user_enabled_attribute = nsAccountLock
user_enabled_default = False
user_enabled_invert = true
{%- if ldap.get('filter', {}).get('user', False) %}
user_filter = {{ ldap.filter.user }}
{%- endif %}

# Group mapping
group_tree_dn = cn=groups,cn=accounts,{{ ldap.suffix }}
group_objectclass = groupOfNames
group_id_attribute = cn
group_name_attribute = cn
group_member_attribute = member
group_desc_attribute = description
{%- if ldap.get('read_only', True) %}
group_allow_create = false
group_allow_update = false
group_allow_delete = false
{%- endif %}

{%- if ldap.tls is defined %}

{%- if ldap.tls.get("enabled", False) %}
use_tls = true
{%- endif %}

{%- if ldap.tls.cacertdir is defined %}
tls_cacertdir = {{ ldap.tls.cacertdir }}
{%- endif %}

{%- if ldap.tls.cacert is defined %}
tls_cacertfile = /etc/keystone/domains/{{ domain_name }}.pem
{%- elif ldap.tls.cacertfile is defined %}
tls_cacertfile = {{ ldap.tls.cacertfile }}
{%- endif %}

{%- if ldap.tls.req_cert is defined %}
tls_req_cert = {{ ldap.tls.req_cert }}
{%- endif %}

{%- endif %}
